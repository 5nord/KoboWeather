#!/bin/sh
#
# It starts a telnet server. If there's an executable called KoboWeather in the
# user partition, then the original Kobo firmware will be killed and the
# executable will be started.

# Start inetd, so we can login via telnet.
mkdir -p /dev/pts
mount -t devpts devpts /dev/pts
/usr/sbin/inetd /etc/inetd.conf

# Don't start APP if USB is pluged in.
if [ -d /sys/devices/platform/usb_host ]; then
	exit
fi

# If there's no custom firmware, just return.
if ! [ -e /mnt/onboard/KoboWeather ]; then
	exit
fi

# Give the original firmware some time to start up and then kill it!
sleep 8
killall nickel
killall hindenburg

showpic()
{
	if [ -r "$1" ]; then
	    zcat "$1" | /usr/local/Kobo/pickel showpic
	    return
	fi

	local pic="/etc/images/$(/bin/kobo_config.sh 2>/dev/null)-$1.raw.gz"
	if [ -r "$pic" ]; then
	    zcat "$pic" | /usr/local/Kobo/pickel showpic
	fi
}


showpic ghostbuster

if [ ! -e /mnt/onboard/uuid ]; then
	/bin/dbus-uuidgen > /mnt/onboard/uuid
fi

hostname "kobo-`cat /mnt/onboard/uuid`"

insmod /drivers/ntx508/wifi/sdio_wifi_pwr.ko
insmod /drivers/ntx508/wifi/dhd.ko
sleep 2

ifconfig eth0 up
wlarm_le -i eth0 up
wpa_supplicant -s -i eth0 -c /etc/wpa_supplicant/wpa_supplicant.conf -C /var/run/wpa_supplicant -B
sleep 2

udhcpc -S -i eth0 -s /etc/udhcpc.d/default.script -t15 -T10 -A3 -f -q

# Run KoboWeather in an infinite loop to "restore" after a crash.
while true; do
	for i in `seq 0 10`; do
	    showpic "on-$i"
	done

	/mnt/onboard/KoboWeather >& /dev/null
	showpic ghostbuster
	sleep 10
done
